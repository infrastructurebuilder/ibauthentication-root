<!--

    Copyright Â© 2019 admin (admin@infrastructurebuilder.org)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.infrastructurebuilder</groupId>
    <artifactId>ibparent</artifactId>
    <version>2</version>
  </parent>
  <groupId>org.infrastructurebuilder.util.auth</groupId>
  <artifactId>ibauthentication-root</artifactId>
  <version>0.9.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>${project.artifactId}</name>
  <description>
  Mapping components for Auth and or Creds file production, generally from a settings file
</description>
  <url>${ib.site.view.url}</url>
  <scm>
    <connection>scm:git:${git.url}</connection>
    <url>scm:git:${git.url}</url>
    <developerConnection>scm:git:${git.url}</developerConnection>
    <tag>HEAD</tag>
  </scm>
  <distributionManagement>
    <site>
      <id>internal</id>
      <name>Internal Server</name>
      <url>dav:${ib.site.view.url}</url>
    </site>
  </distributionManagement>
  <properties>
    <ib.site.path>${project.groupId}/${project.artifactId}/${project.version}</ib.site.path>
  </properties>
  <issueManagement>
    <url>${github.url.base}/ibauthentication-root/issues</url>
    <system>GitHub</system>
  </issueManagement>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.infrastructurebuilder.util</groupId>
        <artifactId>ibcore-bom</artifactId>
        <version>0.9.1.0</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.infrastructurebuilder</groupId>
        <artifactId>maven-import-bom</artifactId>
        <version>${maven.version}.0</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.infrastructurebuilder.util.auth</groupId>
        <artifactId>ibauth-api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.infrastructurebuilder.util.auth</groupId>
        <artifactId>ibauth-api</artifactId>
        <type>test-jar</type>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.infrastructurebuilder.util.auth</groupId>
        <artifactId>ibauth-factory</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.infrastructurebuilder.util.auth</groupId>
        <artifactId>ibauth-aws</artifactId>
        <version>${project.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>org.eclipse.sisu</groupId>
      <artifactId>org.eclipse.sisu.plexus</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.sisu</groupId>
      <artifactId>org.eclipse.sisu.inject</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>joor-java-8</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <pluginManagement>
      <plugins>
      <!--
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco.version}</version>
          <configuration>
            <destFile>${jacoco.ut.execution.dest.file}</destFile>
            <dataFile>${jacoco.ut.execution.data.file}</dataFile>
            <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
            <skip>${jacoco.skip}</skip>
          </configuration>
          <executions>
            <execution>
              <id>pre-unit-test</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
              <configuration>
                <propertyName>surefireArgLine</propertyName>
              </configuration>
            </execution>
            <execution>
              <id>post-unit-test</id>
              <phase>test</phase>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
            <execution>
              <id>pre-integration-test</id>
              <phase>pre-integration-test</phase>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
              <configuration>
                <destFile>${jacoco.it.execution.dest.file}</destFile>
                <propertyName>failsafeArgLine</propertyName>
              </configuration>
            </execution>
            <execution>
              <id>post-integration-test</id>
              <phase>post-integration-test</phase>
              <goals>
                <goal>report</goal>
              </goals>
              <configuration>
                <dataFile>${jacoco.it.execution.data.file}</dataFile>
                <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
              </configuration>
            </execution>
            <execution>
              <id>default-ut-check</id>
              <goals>
                <goal>check</goal>
              </goals>
              <configuration>
                <haltOnFailure>true</haltOnFailure>
                <rules>
                  <rule
                    implementation="org.jacoco.maven.RuleConfiguration">
                    <element>BUNDLE</element>
                    <limits>
                      <limit
                        implementation="org.jacoco.report.check.Limit">
                        <counter>INSTRUCTION</counter>
                        <value>COVEREDRATIO</value>
                        <minimum>.${test.coverage.percentage.required}</minimum>
                      </limit>
                      <limit
                        implementation="org.jacoco.report.check.Limit">
                        <counter>CLASS</counter>
                        <value>MISSEDCOUNT</value>
                        <maximum>${jacoco.max.missed.classes}</maximum>
                      </limit>
                    </limits>
                  </rule>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>
       -->

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <systemPropertyVariables>
              <target>${project.build.directory}</target>
            </systemPropertyVariables>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.infrastructurebuilder.maven</groupId>
          <artifactId>ibversions-maven-plugin</artifactId>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
  <!-- To download the packer binary based on OS. Assuming only 64 bit will be used -->
  <modules>
    <module>ibauth-api</module>
    <module>ibauth-factory</module>
    <module>ibauth-ansible</module>
    <module>ibauth-aws</module>
    <module>ibauth-docker</module>
    <module>ibauth-pypirc</module>
    <module>ibauth-virtualbox</module>
    <module>ibauth-gcp</module>
  </modules>
</project>